#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        ToggleToL1 {
            bindings = <&tog 1>;
            key-positions = <11 15>;
            layers = <0>;
            require-prior-idle-ms = <1000>;
        };

        WinChangeLanguage {
            bindings = <&kp JP_HANZEN>;
            key-positions = <41 27>;
            timeout-ms = <700>;
            require-prior-idle-ms = <20>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W  &kp E       &kp R                   &kp T                                                                  &kp Y        &kp U  &kp I      &lt 5 O  &lt 6 P
&kp A                  &kp S  &kp D       &lt 6 F                 &kp G                   &kp CAPSLOCK            &tog 6                 &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z                  &kp X  &kp C       &kp V                   &kp B                   &mt LEFT_SHIFT TAB      &mt RIGHT_SHIFT MINUS  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt 3 INTERNATIONAL_4  &none  &kp ESCAPE  &mt LEFT_GUI BACKSPACE  &mt LEFT_ALT BACKSPACE  &mt LCTRL DELETE        &kp ENTER              &lt 2 SPACE                             &lt 3 JP_YEN
            >;
        };

        Mac_and_iPad {
            bindings = <
&trans  &trans  &trans  &trans               &trans                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans               &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans               &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &mt LCTRL BACKSPACE  &trans  &mt LEFT_GUI MINUS      &trans  &trans                          &trans
            >;
        };

        NUMBER_AND_FUNCTION {
            bindings = <
&kp N1  &kp N2  &kp N3      &kp N4         &kp N5                                    &kp N6        &kp N7           &kp N8     &kp N9   &kp N0
&kp F1  &kp F2  &kp F3      &kp F4         &kp F5         &kp F6          &kp F7     &kp F8        &kp F9           &kp F10    &kp F11  &kp F12
&none   &none   &none       &kp JP_PLUS    &kp MINUS      &kp TAB         &kp CARET  &kp JP_TILDE  &kp JP_ASTERISK  &kp SLASH  &kp DOT  &kp JP_EQUAL
&none   &none   &kp ESCAPE  &kp BACKSPACE  &kp BACKSPACE  &kp DELETE      &trans     &trans                                             &kp JP_YEN
            >;
        };

        SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp JP_DQUOTE  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp JP_AMPERSAND  &kp JP_EQUAL      &kp JP_LPAREN    &kp JP_RPAREN    &kp JP_PIPE
&kp JP_AT        &kp JP_QUOTE   &trans    &trans      &trans       &trans      &trans  &trans            &kp JP_BACKQUOTE  &kp JP_LBRACE    &kp JP_RBRACE    &kp JP_UNDERSCORE
&trans           &kp JP_COLON   &trans    &trans      &trans       &trans      &trans  &trans            &trans            &kp JP_LBRACKET  &kp JP_RBRACKET  &trans
&trans           &trans         &trans    &trans      &trans       &trans      &trans  &trans                                                                &trans
            >;
        };

        NoUse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &kp HOME  &kp UP_ARROW    &kp END          &kp PAGE_UP                        &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans          &trans           &trans         &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans          &trans           &trans         &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE_and_Bluetooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &mkp MB4  &trans    &mkp MB5  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans    &trans    &trans    &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans      &tog 0  &trans                                &bt BT_CLR_ALL
            >;
        };
    };
};
